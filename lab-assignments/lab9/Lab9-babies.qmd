---
title: "Lab 9: Baby Names & Births"
subtitle: "Regression & Simulation"
author: "Your name"
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

```{r setup}
#| include: false
library(tidyverse)
```

[Download .qmd starter file](Lab9-babies.qmd)

[Download `StateNames_E.csv`](baby-names-data/StateNames_E.csv)


## Baby Names Regression

Our data set in this lab contains baby names that begin with "E" and their popularity over time. For each year, and for each name with at least 50 recorded babies born, we are given the counts of how many babies had that name.

::: callout-note
If you wish to download the data set for your name, you can find the names for ALL 50 states, in separate data sets organized by first letter of the name [here](https://github.com/earobinson95/stat331-calpoly/tree/master/lab-assignments/lab9/baby-names-data).
:::

Let's take a look at how the name "Emily" has changed over time. As my name begins with "E", you should load in the `StateNames_E.csv` data set.

```{r}
#| include: false
babies_e <- read.csv(
  here::here("lab-assignments",
             "Lab9",
             "baby-names-data",
             "StateNames_E.csv")
  )
```

## Explore the Number of Emilys

**1. _Create a Game Plan & Code!_ -- Make a summary table of the number of babies named "Emily" for each state and the sex of the baby.**

  + **Specifically, each state should be its own row and each sex should have its own column.**
  + **Additionally, if there were no babies born with the name "Emily" for that combination of state & sex the table should have a value of 0 (not an `NA`).** 
  
::: callout-warning 
To be clear, there should be **one** row per state, which means you need to `summarize()` all the years for each state.
:::

::: callout-caution
The data set has a column titled `Gender`, which contains two values `"F"` and `"M"`, representing "Female" and "Male". The sex someone was assigned at birth is different from their gender identity [(definitions)](https://www.plannedparenthood.org/learn/gender-identity/sex-gender-identity). Thus, this variable should be renamed to `Sex` or `Sex at Birth`.

You should be using only **one** {dplyr} pipeline!
:::

<!-- Insert your game plan sketch with markdown code here -->

```{r}
# Code Q1
```

**2. You should have seen in the table above that "Emily" is a name given overwhelmingly to babies assigned "female" at birth. Create a new data set to include only babies named "Emily" assigned `F`emale at birth. Summarize the data so there is one observation (the total number of Emilys born) for each year.**

::: callout-note
+ Save this data set so you can use it in the rest of the lab questions.
+ No output needed for this question, only code
:::

```{r}
# Code Q2
```

**3. Using the new summarized data set from above, make a visualization showing how the popularity of the name "Emily" for babies assigned female at birth has changed over the years.**

```{r}
# Code Q3
```

## Modeling the Number of Emilys

**4. Using the new summarized data set from above, create a linear model with the year as the explanatory variable, and the number of Emilys as the response.**

```{r}
# Code Q4
```

**5. Visualize the linear regression.**

```{r}
# Code Q5
```

**6. Obtain the coefficient table and write out the estimated regression equation.**

```{r}
# Code Q6
```

<!-- Equation for Q6 -->

**7. Plot the _residuals_ of the model versus the Year. Comment on the residuals - do you see any patterns?**

::: callout-tip
The `augment()` function from the **broom** package may be helpful!
:::

```{r}
# Code Q7
```

## Random Babies Simulation

Perhaps you have seen the [Random Babies applet](https://www.rossmanchance.com/applets/2021/randombabies/RandomBabies.html)? Suppose one night at a hospital four mothers each give birth to a baby. The hospital is not very organized and looses track of which mother gave birth to each baby, and essentially returns the babies to the mothers at random. Here, we are interested in the number of babies that are correctly returned to their respective mothers. 

**1. Simulate the distribution of the number of babies that are correctly returned. Use 1000 simulations.**

::: callout-hint
Write a function to accomplish one simulation, then use `map_df` to save results out.
:::

```{r}
randomBabies <- function(nBabies){
  # fill out the function body
}

```

**2. Create a barplot showing the simulated distribution (proportion).**

::: callout-hint
Useful code: `geom_bar(aes(y = after_stat(count) / sum(after_stat(count))))`
:::

```{r}
# code for 2
```
