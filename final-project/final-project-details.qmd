---
title: "Final Project Details"
subtitle: "Stat 331/531"
author: "Dr. Robinson"
format: 
  html:
    self-contained: true
    toc: true
    number-sections: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

```{r}
#| include: false
library(tidyverse)

education <- read_csv("data/ratio_of_girls_to_boys_in_primary_and_secondary_education_perc.csv")

income <- read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
```

## Project Check-points {-}

| Project Component | Due Date         |
| ----------------- | ---------------- |
| Group Contract    | Sunday, 2/25  |
| [Project Proposal - Data](#proposal)    | Tuesday, 3/5   |
| [Linear Regression](#linear-reg) | Tuesday, 3/12  |
| [Final Written Report](#sim) (Simulation portion + modifications from checkpoint feedback) | Friday, 3/15 |

Please turn in your `.html` document at each check-point. *You can continue to build on one file for each subsequentive check-point.*

::: callout-note
### Check-point Grading

The first three check-points before the Final Report submission are in place to keep your group on track. I will be doing a quick skim of each check-point for completion and any glaring issues, but I will not be providing detailed feedback at each step. Please see me in office hours or reach out on Discord if you have specific questions.

Each check-point will be worth 3 Flex Points:

+ **3 points** (Master) All parts completed with thought.
+ **2 points** (Practitioner) Completed all parts, but with little thought OR missing some parts, but parts completed with thought.
+ **1 point** (Novice) Missing significant parts OR significant changes need to be made.
+ **0 points** (No Marks) No submission.

:::

## Structure & Deliverables {-}

For your Final Project in Stat 331, you will use your new skills to create a
"deliverable."  This project should be a thoughtful, professional creation that
you will be proud to share even after this class is over.

Every group is expected to complete a written report outlining the "key" 
features of your model and it's predictions. Your group also has the opportunity 
to refine aspects of your to earn you additional Challenge Points.

Everyone in a group will receive the same grade, unless concerns are privately
expressed to me about member contributions in the final peer evaluation.

## The Written Report {-}

Every group is required to complete a final written project, covering 
linear regression and model simulation. The written description of what you 
need to accomplish in each component of the project can be found in each 
of the sections below. Each section will specify what 
you are required to do for the project and what must be included in your
written report. It is, however, up to you how you would like to structure your report (both content and style). Your group must determine on the section headers (and any sub-headers) to be included in the final written report.

Your analysis should read like a formal article, such as those that appear in
popular science journals like [this one](https://www.scientificamerican.com/). See an example simple article [here](https://www.mdpi.com/2504-446X/3/2/41). That
is, it should be *formatted* and *polished* - we shouldn't be able to see any
code unless it is absolutely necessary (may want to `code-fold: true`), plots and tables should have clear
labels, and the article should have a clear narrative flow.

## Project Proposal - Data {#proposal}

::: callout
### Objectives

+ Find two **quantitative** variables from Gapmider that you are interested in exploring their relationship
+ Download the data files for each variable and clean them
+ Join two datasets into one larger dataset
:::

::: callout
### Written Components

+ Detailed data and variable description
+ Hypothesized relationship (and any outside references)
+ Data cleaning process and decisions
:::

### Data

The data for this project will be pulled from:

<https://www.gapminder.org/data/>

### Data Cleaning 

It is often said that 80-90% of what a "data scientist" does is clean and 
organize data, in preparation for an analysis. I have certainly found this to 
be true.  

The variables you choose will each be contained in a spreadsheet. The 
spreadsheet will look something like this:

```{r}
#| echo: false
education
```

### Pivoting Longer

You should notice that the values of `year` are spread across multiple columns.
For your analysis, you will need to pivot these columns to be in a **single**
column. 

```{r}
#| include: false

k_to_thousands <- function(x){
  
  num <- case_when(str_detect(x, pattern = "k") ~ 
                     as.numeric(
                       str_extract(x, pattern = ".*[^k]") 
                       ) * 1000, 
                   TRUE ~ as.numeric(x)
  )
  return(num)
}

education_long <- education |> 
  pivot_longer(cols = -country, 
               names_to = "year", 
               values_to = "ratio_boys_to_girls")

income_long <- income |> 
  mutate(across(.cols = -country, 
                .fns = k_to_thousands
                )
         ) |> 
  pivot_longer(cols = -country, 
               names_to = "year", 
               values_to = "gdp_per_person")
```

### Data Cleaning

It is possible that you will need to perform some data cleaning *before* 
pivoting! For example, if some incomes are recorded as `36` while others are 
recorded as `"1.1k"`, R will not allow for you to pivot your columns since
these columns do not have the same data type! You will need to convert the 
value of `"1.1k"` into a number *before* pivoting. 

### Joining Datasets

To have both of the variables in the **same** dataset, you will need to perform
a join. The type of join is up to you, but keep in mind that the default in 
`ggplot()` and in `lm()` is to drop all of the `NA` values before plotting or 
fitting a regression model.

```{r}
#| include: false
#| eval: false

ed_income <- education_long %>% 
  left_join(income_long, 
            by = c("year", "country")
  )
```

## Linear Regression {#linear-reg}

::: callout
### Objectives

+ Visualize and the relationship between these variables
+ Use linear regression to model the relationship between these variables
+ Evaluate your model fit by summarizing the amount of variability in the response, fitted, and residual values
:::

::: callout
### Written Components
+ Present and discuss the visualizations of the relationship between the variables
+ Describe the statistical method used -- linear regression
+ Present the estimated regression model (in notation)
+ Interpret the Linear Regression coefficients (in context)
+ Describe the fit of the regression model (both table and written format)
:::

### Data Visualization {#dataviz}

Create **two** visualizations exploring the following:

1. The relationship between the two quantitative variables changing over time. Get creative!

2. The relationship between the two quantitative variables you are investigating.
  + In investigating this relationship, you may want to first average over the years for each country (i.e., one observational row per country since our independence condition would be violated).

::: callout-warning 
Keep in mind your response should be on the $y$-axis and your explanatory variable should be on the $x$-axis.
:::

### Linear Regression

Fit a simple linear regression model for the relationship between the variables you selected (keep in mind you should have averaged over the years for each country). Similar to your visualization, you will need to define which variable is the response ($y$) and which variable is the explanatory ($x$).

> Your final report should present the estimated regression model _and_ provide
an interpretation for each of the coefficients output.


### Model Fit

To assess how "good" of a regression model you have we are going to look at how
much of the variability in the response values were accounted for by your
regression. 

The goal of regression is to account for as much variability in the *response*
values as we can. Here, the variance in the *fitted values* represents the 
amount of variability in the response that was accounted for by the explanatory
variable. The variance in the *residuals* represents the amount of variability 
in the responses that **has not** been accounted for. 

> Make a nicely formatted table that presents the following:
> 
> - The variance in the response values
> - The variance in the fitted values from your regression model
> - The variance in the residuals from your regression model
> 
> Discuss the proportion of the variability in the response values that was 
accounted for by your regression model. What does this suggest about the 
"quality" of your model?

::: callout-note
We are skirting around the ideas of $R^2$, which you can read more 
about [here](https://moderndive.com/6-multiple-regression.html#rsquared).
:::

## Simulation {#sim}

Note you should continue working with the data that is averaged over years for this section (i.e., one row/observation per country).

::: callout
### Objectives
- generate predictions from your chosen linear regression model
- use the predictions to simulate observations
- compare the simulated data to the observed data
- generate multiple predictive checks for your model
:::

::: callout
### Written Components
- Present visualization of simulated data (side by side observed data) and disucss similarities and/or differences.
- Present $R^2$ distribution plot and discuss implications.
:::

### Visualizing Simulations from the Model

With your simple linear regression, generate predictions using the `predict()`
function. Then, add random errors to the predictions, using the residual
standard error estimated from the linear regression model
(acquired with `sigma()`).

Now, compare these simulated observations to the observed data. Generate the
**same** plot of the relationships modeled by the linear regression, for the
simulated data (that you made at during [2.1 Data Visualizations](#dataviz)).

> Plot the visualization of the observed data and the simulated data side-by-side.
>
> Discuss how the simulated data are similar and / or different to the observed
data.

### Generating Multiple Predictive Checks

Generate *at least* 1000 simulated datasets that you expect would have been
observed if your regression model adequately described the relationship between
your response and explanatory variables.

Regress the observed dataset against each simulated dataset
(e.g. `lm(observed ~ simulated)`), and keep the $R^2$ from each regression. Keep
in mind that `lm()` discards any observations with missing values (`NA`) for
**any** of the variables included in your model. So, you will need to remove
these observations *before* joining with the observed data.

> Plot the distribution of the $R^2$ values from the regressions.
>
> Discuss the implications of the values shown in the plot (i.e., How well does your model generate data similar to what was observed?)

## Project Options [max +27 FP] {-}

Your group has the opportunity to complete additional components to the 
written report, to earn Flex Points. These "extra" components 
may take a bit of time, so your **entire group** should make the decision 
as to whether you can complete the task. 

### Option A: Use GitHub to Collaborate [max +12 FP / Person]

### Option B: Using $\LaTeX$ [+3 FP / Person] {-}

$\LaTeX$, which is pronounced Lah-tech or Lay-tech, is a document preparation
system for high-quality typesetting. It is most often used for medium-to-large
technical or scientific documents but it can be used for almost any form of
publishing. Some of the perks of using $\LaTeX$ are:

- Typesetting journal articles, technical reports, books, and slide
presentations 
- Control over large documents containing sectioning, cross-references, tables
and figures
- Typesetting of complex mathematical formulas
- Advanced typesetting of mathematics with AMS-LaTeX 
- Automatic generation of bibliographies and indexes

You can include $\LaTeX$ math typeset within a Quarto document with `$`'s.

::: callout-note
#### Resources
- [Dr. Theobold's Repository from LaTeX workshop](https://github.com/atheobold/IntroLaTeXLesson)

- [Overleaf Guide on Mathematical Expressions](https://www.overleaf.com/learn/latex/Mathematical_expressions)

- [Detexify](https://detexify.kirelabs.org/classify.html)
:::

> If your group chooses to embark on this adventure. I would like for you to include a nicely formatted $\LaTeX$ equation for your regression model in your written report! 


### Option C: Creating Slick Tables [max +6 FP / Person] {-}

Similar to $\LaTeX$, creating nicely formatted tables is an important aspect 
to creating a professional report. 

::: callout-note
#### Resources

For formatting tables output from R, there are a variety of tools for making
nicely formatted tables, but the two I recommend are: 

- The `kable()` function from the [kable package](https://bookdown.org/yihui/rmarkdown-cookbook/kable.html) -- For a nice, basic HTML table

- The [kableExtra package](https://bookdown.org/yihui/rmarkdown-cookbook/kableextra.html) -- For additional styling features of your HTML table

An additional package you can explore is the [DT Package](https://rstudio.github.io/DT/).
This package creates interactive data tables, previewing different aspects of 
a data set. This is a nice way to include a preview of a dataset at the beginning
of a report!
:::

> If your group chooses to embark on this adventure. I would like for you to include your nicely formatted table in your written report! 

**+3 FP / Person**:

- Table formatted with `kable()`

**+6 FP / Person**:

- Table formatted with `kableExtra`
- Table created with `DT`

### Option D: Animating a Plot [max +6 FP / Person] {-}

A great extra for a plot is animation (might want to use this for your plot over time)! There are two different packages that can help you add animations to a plot:

1. The **gganimate** package makes it easy to animate **ggplot2** graphics. 
2. The **plotly** package has it's own interface for creating interactive plots.

::: callout-note
#### Resources

The **gganimate** website (<https://gganimate.com/>) has a great
["Getting Started"](https://gganimate.com/articles/gganimate.html) tutorial on
how to make animated visualizations. 

The **plotly** website (<https://plotly.com/r/basic-charts/>) has some examples
of ["Basic Charts"](https://plotly.com/r/basic-charts/) that should 
help you learn the syntax of creating an interactive visualization. 
:::

> If your group chooses to embark on this adventure. I would like for you to include your animated visualization in your written report!