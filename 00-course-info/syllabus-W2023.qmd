---
title: "Stat 331/531: Statistical Computing with R"
# author: ""
date: "January 9, 2023"

format: 
  html:
    self-contained: true
    toc: true
  pdf:
    keep-tex: false
    # include-in-header: "in-header.tex"
    include-in-header: 
      text: |
        \makeatletter
        \def\@maketitle{%
          \begin{center}%
          \let \footnote \thanks
            {\LARGE \@title \par}%
            {\large \@author \par}%
            {\large \@date}
          \end{center}%
          \par
          \vskip 1em}
        \makeatother
        \RedeclareSectionCommand[beforeskip=1ex plus -.2ex minus -.2ex,afterskip=.25ex plus -.1ex minus -.1ex]{section}
        \RedeclareSectionCommand[beforeskip=1ex plus -.2ex minus -.2ex,afterskip=.25ex plus -.1ex minus -.1ex]{subsection}
        \RedeclareSectionCommand[beforeskip=1ex plus -.2ex minus -.2ex,afterskip=.25ex plus -.1ex minus -.1ex]{subsubsection}
        \raggedbottom
        \usepackage{enumitem}
        \setlist{nolistsep}
    latex-engine: xelatex
    
dev: png
geometry: margin=1in

fontfamily: mathpazo
fontsize: 11pt
---

## Contact

**Dr. Emily Robinson**

-	Email: [erobin17\@calpoly.edu](mailto:erobin17@calpoly.edu?subject=Stat%20331)
-	Office: Building 25 Office 103 (by Statistics Department Office) 

**Course Forum:**

For questions of general interest, such as course clarifications or conceptual questions, please use the class discussion forum. I encourage you to give your post an informative title, so that other people can find it. For example, *“How do I color bars in a barplot with ggplot?”* is a better discussion title than *“help with plotting”*.

While your posts are not anonymous, in this case there is no such thing as a bad question!

## Course Info

**Times:** 

Mondays/Wednesdays

- Section 70: 10:10am - 12:00pm
- Section 71: 12:10pm - 2:00pm

**Room:** 38-0123 (Math & Science)

## Office Hours

| Day       | Time                                                                           |
|-----------|--------------------------------------------------------------------------------|
| Tuesdays  | 10:10am - 11:00am, in-person (25-103)                                          |
| Thursdays | 10:10am - 11:00pm, in-person (25-103)                                          |
| Fridays   | 1:15pm - 2:15pm, by appt (<https://calendly.com/calpoly-emily-robinson/15min>) |

Office hours by appointment are required to be scheduled at least 1-hour prior to the meeting. You can schedule either Zoom or in-person office hour appointments through Calendly.

```{r}
#| include: false

# knitr::opts_chunk$set(cache=FALSE, dev='pdf')
# knitr::opts_chunk$set(cache=F,
#                       fig.path = 'figs/',
#                       cache.path='cache/',
#                       fig.align = 'center',
#                       echo = F,
#                       warning=F,
#                       message=F)
# knitr::opts_chunk$set(
#                   fig.process = function(x) {
#                       x2 = sub('-\\d+([.][a-z]+)$', '\\1', x)
#                       if (file.rename(x, x2)) x2 else x
#                       }
#                   )

library(tidyverse)
library(lubridate)

# Create a calendar for your syllabus ----
# Source: http://svmiller.com/blog/2020/08/a-ggplot-calendar-for-your-semester/
# 1) what is the first Monday of the semester?
# Any number of ways to identify dates in R, but we'll use {lubridate} and the ymd() function here.
# Format: YYYYMMDD. In this example, 4 January 2022.
# What are the full dates of the semester?
semester_dates <- seq(ymd(20230109), ymd(20230318), by=1)
# Weekday(s) of class
class_wdays <- c("Mon", "Wed")

not_here_dates <- c(
  ymd("20230116"),
  ymd("20230220")
  # Break
  # seq(ymd(20221017), ymd(20221018), by = 1)
  )

exam_dates <- c(ymd(20230215), 
                ymd(20230320),
                ymd(20230322)
                )

# project_dates <- c(ymd(20221104), ymd(20221205), ymd(20221209))
finals_week <- seq(ymd(20230318), ymd(20230325), by = 1)

# Custom function for treating the first day of the month as the first week 
# of the month up until the first Sunday 
# (unless Sunday was the start of the month)
wom <- function(date) {
    first <- wday(as.Date(paste(year(date), month(date), 1, sep = "-")))
    return((mday(date) + (first - 2)) %/% 7 + 1)
  }
# Create a data frame of dates, assign to Cal
Cal <- tibble(date = seq(ymd(20230109), ymd(20230325), by=1))  %>%
  mutate(mon = lubridate::month(date, label=T, abbr=F),
         wkdy = weekdays(date, abbreviate=T),
         wkdy = fct_relevel(wkdy, "Sun", "Mon", "Tue", "Wed", "Thu","Fri","Sat"), # make sure Sunday comes first
         semester = date %in% semester_dates, 
         # project = date %in% project_dates,
         exams = date %in% exam_dates, # is it an exam?
         not_here = date %in% not_here_dates, # is it a day off?
         exam_wk = date %in% finals_week,
         day = lubridate::mday(date), 
         week = wom(date))
Cal <- Cal %>%
  mutate(category = case_when(
    # project ~ "Project",
    exams ~ "Exam",
    not_here ~ "Cal Poly Holiday",
    semester & wkdy %in% class_wdays & !not_here & !exam_wk | date == "2023-01-17" ~ "Class Day",
    semester ~ "Finals",
    TRUE ~ "NA"
  )) 
class_cal <- Cal %>% 
  ggplot(.,aes(wkdy, week)) +
  theme_bw() +
  theme(aspect.ratio = 1, 
        panel.grid.major.x = element_blank(),
        legend.position = "right",
        # legend.position = c(1, 0), 
        # legend.justification = c(1,0),
        # legend.direction = "vertical", 
        legend.title = element_blank(),
        axis.title.y = element_blank(), 
        axis.title.x = element_blank(),
        axis.ticks.y = element_blank(), 
        axis.text.y = element_blank()) +
  geom_tile(alpha=0.8, aes(fill=category), color="black", size=.45) +
  facet_wrap(~mon, scales = "free", ncol=3) +
  geom_text(aes(label = day, color = semester & (!not_here))) +
  # put your y-axis down, flip it, and reverse it
  scale_y_reverse(breaks=NULL) +
  # manually fill scale colors to something you like...
  scale_color_manual(values = c("FALSE" = "grey80", "TRUE" = "black"), guide = "none") + 
  scale_fill_manual(values=c("Class Day"="purple", 
                             "Finals"="white",
                             "Cal Poly Holiday" = "grey10",
                             "NA" = "white", # I like these whited out...
                             "Exam"="orange"),
                    #... but also suppress a label for a non-class semester day
                    breaks=c("Finals", "Cal Poly Holiday", "Class Day","Exam"))
class_cal

exam_days <- filter(Cal, category == "Exam") %>%
  mutate(topic = c("Midterm Exam", "Final Exam", "Final Exam"),
         time = c("In Class", "10:10AM-1:00PM", "10:10AM - 1:00PM")) %>%
  rowwise() %>%
  mutate(sem_week = week(date),
         Date = paste(format(date, "%b %e"), sep = ",", collapse = ", "))

# project_days <- filter(Cal, category == "Project") %>%
#   mutate(topic = c("Project Proposal Due", "Project Presentation Due", "Project Report Due"),
#          time = c("8pm", "8pm", "8pm")) %>%
#   mutate(Date = format(date, "%b %e"),
#          sem_week = week(date))

class_days <- filter(Cal, category %in% c("Class Day")) %>%
  mutate(sem_week = week(date)) %>%
  group_by(sem_week) %>%
  # group_by(sem_week) %>%
  summarize(Date = paste(format(date, "%b %e"), sep = ",", collapse = ", ")) %>%
  mutate(topic = c(
    "Getting Started",
    "Basic Variable Types & Control Structures",
    "Data Structures & Programming with Data",
    "Data Cleaning and Manipulation (dplyr)",
    "Data Transformations (tidyr)",
    "Data Visualization (ggplot2)",
    "Strings-Factors-Dates",
    "Debugging & Version Control",
    "Simulation & Modeling",
    "Simulation & Modeling")) %>%
  # bind_rows(project_days) %>%
  bind_rows(exam_days) %>%
  arrange(sem_week) %>%
  select(Date, Topic = topic)
```

# Course Description

Introduction to programming for statistical analysis. Covers basic programming concepts necessary for statistics, good computing practice, and use of built-in functions to complete basic statistical analyses.

**Prerequisites**

Entrance to STAT 331/531 requires successful completion of a Stat II qualifying course and an introductory computing course.

\newpage

# Learning Objectives

This course will teach you the foundations of statistical computing principles in the language of `R`.

After taking this course, you will be able to:

+ Work with the RStudio IDE and quarto documents.
+ Import, manage, and clean data from a wide variety of data sources.
+ Visualize and summarize data for informative exploratory data analysis and presentations.
+ Write efficient, well-documented, and tidy `R` code.
+ Program random experiments and simulations from probability models
+ Extend your R skills independently through documentation and online resources.

Additionally, it is my hope that you will learn to:

+ Extend your R skills independently through documentation and online resources.
+ Be thoughtful, deliberate, and ethical in your use of R and similar tools.
+ Use R to be playful, creative, and fun!
+ Contribute to and participate in the R Open Source Community.

# Course Resources

**Textbook**

The primary textbook for this course modified from material by [Susan VanderPlas](https://github.com/srvanderplas) and other resources listed below. It is available for free at <https://earobinson95.github.io/stat331-calpoly/>. It is under construction/a work in progress, so it may be hard to work more than a couple of weeks ahead in this class using the primary textbook.

In addition, you may find it useful to reference some of the following resources that I have consulted while assembling the textbook. Most are available online for free, though some require an institutional email address.

+ [R for Data Science (2nd edition)](https://r4ds.hadley.nz/)
+ [Modern Dive](https://moderndive.com/1-getting-started.html)
+ [Posit Primers](https://posit.cloud/learn/primers)
+ [Advanced R](http://adv-r.had.co.nz/)

**Equipment**

Although you may always work on the Studio computers, I strongly recommend that you use your own personal laptop for this course if you have one.

Chromebooks and ipads will **not** be sufficient to use R.

If this requirement is limiting for you, please contact me ASAP.


# Class Schedule & Topic Outline

This schedule is tentative and subject to change.

```{r calendar}
#| echo: false
#| eval: true
#| warning: false
#| fig-width: 8
#| fig-height: 3.5
#| fig-pos: 'h'
#| fig-cap: "Tuesday, January 17th will follow a Monday class schedule."
class_cal
```

```{r schedule}
#| echo: false
#| eval: true
#| fig-pos: 'h'
class_days %>%
kableExtra::kable(caption = "Tentative schedule of class topics and important due dates", format = "simple")
```

# Course Policies

## Assessment/Grading

Your grade in STAT 331/531 will contain the following components:

| Assignments          | Weight |
| -------------------- | -------|
| Flex Points          | 5%     |
| Practice Activities  | 10%    |
| Homework Assignments | 15%    |
| Project I            | 15%    |
| Midterm              | 15%    |
| Project II           | 15%    |
| Final Exam           | 25%    |

Lower bounds for grade cutoffs are shown in the following table. I will not "round up" grades at the end of the quarter beyond strict mathematical rules of rounding.

| Letter grade | X +  | X   | X - |
|--------------|------|-----|-----|
| A            |  .   | 93  | 90  |
| B            | 87   | 83  | 80  |
| C            | 77   | 73  | 70  |
| D            | 67   | 63  | 60  |
| F            | \<60 |     |     |

Interpretation of this table:

-   A grade of 85 will receive a B.
-   A grade of 77 will receive a C+.
-   A grade of 70 will receive a C-.
-   Anything below a 60 will receive an F.

#### General Evaluation Criteria

In every assignment, discussion, and written component of this class, you are expected to demonstrate that you are intellectually engaging with the material. I will evaluate you based on this engagement, which means that technically correct but low effort answers which do not demonstrate engagement or understanding will receive no credit.

When you answer questions in this class, your goal is to show that you either understand the material or are actively engaging with it. If you did not achieve this goal, then your answer is incomplete, regardless of whether or not it is technically correct. This is not to encourage you to add unnecessary complexity to your answer - simple, elegant solutions are always preferable to unwieldly, complex solutions that accomplish the same task.

While this is not an English class, grammar and spelling are important, as is your ability to communicate technical information in writing; both of these criteria will be used in addition to assignment-specific rubrics to evaluate your work.

# Course Expectations

You will get out of this course what you put in. The following excerpt was taken from Rob Jenkins’ article “Defining the Relationship” which was published in The Chronicle of Higher Education (August 8, 2016). This accurately summarizes what I expect of you in my classroom (and also what you should expect of me). 

*“I’d like to be your partner. More than anything, I’d like for us to form a mutually beneficial alliance in this endeavor we call education.*

*I pledge to do my part. I will:*

+ *Stay abreast of the latest ideas in my field.* 
+ *Teach you what I believe you need to know; with all the enthusiasm I possess.*
+ *Invite your comments and questions and respond constructively.*
+ *Make myself available to you outside of class (within reason).*
+ *Evaluate your work carefully and return it promptly with feedback.* 
+ *Be as fair, respectful, and understanding as I can humanly be.*
+ *If you need help beyond the scope of this course, I will do my best to provide it or see that you get it.* 

*In return, I expect you to:*

+ *Show up for class each day or let me know (preferably in advance) if you have some good reason to be absent.* 
+ *Do your reading and other assignments outside of class and be prepared for each class meeting.*
+ *Focus during class on the work we’re doing and not on extraneous matters (like whoever or whatever is on your phone at the moment).* 
+ *Participate in class discussions.*
+ *Be respectful of your fellow students and their points of view.* 
+ *In short, I expect you to devote as much effort to learning as I devote to teaching.*

*What you get out of this relationship is that you’ll be better equipped to succeed in this and other college courses, work-related assignments, and life in general. What I get is a great deal of professional and personal satisfaction. Because I do really like you [all] and want the best for you.”*

### Make Mistakes!

Programming is the process of making a series of silly or stupid mistakes, and then slowly fixing each mistake (while adding a few more). The only way to know how to fix these mistakes (and avoid them in the future) is to make them. (Sometimes, you have to make the same mistake a few dozen times before you can avoid it in the future). At some point during the class, you will find that you've spent 30 minutes staring at an error caused by a typo, a space, a parenthesis in the wrong place. You may ask for help debugging this weird error, only to have someone immediately point out the problem... it is always easier to see these things in someone else's code. This is part of programming, it is normal, and you shouldn't feel embarrassed or sorry (unless you put no effort into troubleshooting the problem before you asked for help)

If you manage to produce an error I haven't seen before, then congratulations. You have achieved something special, and that achievement should be celebrated. Each new and bizarre error is an opportunity to learn a bit more about the programming language, the operating system, or the interaction between the two.

# Other Policies

See [academicprograms.calpoly.edu/content/academicpolicies](https://academicprograms.calpoly.edu/content/academicpolicies/index).

## Participation and Attendance

I do not take formal attendance in this class. However, it is my expectation that you remain in class and on task until you have finished all your activities and assignments. Consistent, repeated failure to attend class or actively participate in the online portions of the course will affect the participation portion of your grade.

If you are feeling ill, please **do not come to class**. Instead, email me, review the material and work on the participation activity and weekly lab assignment, and then schedule an appointment with me to meet virtually.

## Late Policy

Your typical homework assignments will be weekly labs. These labs are due on Fridays at midnight.

There are no extensions on lab assignments. There is a grace period through Sunday at midnight, during which your late lab recieves a 10% grade deduction.

Labs turned in later than Sunday will not be reviewed, and instead will be quickly checked for completeness and recieve an automatic grade of 50%.

## Diversity and Inclusion

It is my goal for everyone to feel safe and comfortable in my classroom. If there is any way I can make the course more welcoming for you, please do not hesitate to ask.

In particular, if you have a disability, I will gladly work with you to make this class accessible.

I encourage you to also contact the Disability Resource Center (Building 124, Room 119 or at 805-756-1395), who can help you register for extra accomodations such as extended exam time.

## Academic Integrity and Class Conduct

Simply put, I will not tolerate cheating or plagiarism.

Any incident of dishonesty, copying, exam cheating, or plagiarism will be reported to the Office of Student Rights and Responsibilities.

Cheating will earn you a grade of 0 on the assignment and an overall grade penalty of at least 10%. In circumstances of flagrant cheating, you may be given a grade of F in the course.

Paraphrasing or quoting another’s work without citing the source is a form of academic misconduct. This included the `R` code produced by someone else! Writing code is like writing a paper, it is obvious if you copied-and-pasted a sentence from someone else into your paper because the way each person writes is different.

Even inadvertent or unintentional misuse or appropriation of another’s work (such as relying heavily on source material that is not expressly acknowledged) is considered plagiarism. If you are struggling with writing the `R` code for an assignment, please reach out to me. I would prefer that I get to help you rather than you spending hours Googling things and get nowhere!

If you have any questions about using and citing sources, you are expected to ask for clarification.

For more information about what constitutes cheating and plagiarism, please see 
[academicprograms.calpoly.edu/content/academicpolicies/Cheating](https://academicprograms.calpoly.edu/content/academicpolicies/Cheating).

